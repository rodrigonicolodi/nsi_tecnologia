<% layout = 'layout' %>
<% titulo = 'Dashboard NSI Tecnologia' %>

<div class="dashboard">
  <div class="dashboard-header">
    <h1>Bem-vindo, <%= usuario.nome %>!</h1>
    <p class="user-level">N√≠vel de acesso: <span class="badge badge-<%= usuario.nivel === 'admin' ? 'success' : 'info' %>"><%= usuario.nivel %></span></p>
  </div>

  <!-- üìä Cards de Estat√≠sticas -->
  <div class="stats-grid">
    <div class="stat-card">
      <div class="stat-icon">
        <i class="fas fa-clipboard-check"></i>
      </div>
      <div class="stat-content">
        <h3 id="total-os">-</h3>
        <p>Ordens de Servi√ßo</p>
        <small id="os-abertas">-</small>
      </div>
    </div>

    <div class="stat-card">
      <div class="stat-icon">
        <i class="fas fa-users"></i>
      </div>
      <div class="stat-content">
        <h3 id="total-pessoas">-</h3>
        <p>Pessoas Cadastradas</p>
        <small id="pessoas-ativas">-</small>
      </div>
    </div>

    <div class="stat-card">
      <div class="stat-icon">
        <i class="fas fa-boxes"></i>
      </div>
      <div class="stat-content">
        <h3 id="total-produtos">-</h3>
        <p>Produtos em Estoque</p>
        <small id="produtos-baixo">-</small>
      </div>
    </div>

    <div class="stat-card">
      <div class="stat-icon">
        <i class="fas fa-money-bill-wave"></i>
      </div>
      <div class="stat-content">
        <h3 id="faturamento-mes">-</h3>
        <p>Faturamento do M√™s</p>
        <small id="crescimento">-</small>
      </div>
    </div>
  </div>

  <!-- üìà Gr√°ficos -->
  <div class="charts-grid">
    <div class="chart-container">
      <h3>OS por Status</h3>
      <canvas id="osStatusChart"></canvas>
    </div>

    <div class="chart-container">
      <h3>Faturamento dos √öltimos 6 Meses</h3>
      <canvas id="faturamentoChart"></canvas>
    </div>

    <div class="chart-container">
      <h3>Produtos Mais Vendidos</h3>
      <canvas id="produtosChart"></canvas>
    </div>

    <div class="chart-container">
      <h3>Performance T√©cnicos</h3>
      <canvas id="tecnicosChart"></canvas>
    </div>
  </div>

  <!-- üö® Alertas e Notifica√ß√µes -->
  <div class="alerts-section">
    <h3>Alertas e Notifica√ß√µes</h3>
    <div id="alerts-container">
      <!-- Alertas ser√£o carregados via JavaScript -->
    </div>
  </div>

  <!-- üîó A√ß√µes R√°pidas -->
  <div class="quick-actions">
    <h3>A√ß√µes R√°pidas</h3>
    <div class="btn-group">
      <a href="/os/nova" class="btn btn-success">
        <i class="fas fa-plus"></i> Nova OS
      </a>
      <a href="/pessoas/novo" class="btn btn-primary">
        <i class="fas fa-user-plus"></i> Nova Pessoa
      </a>
      <a href="/financeiro/nova" class="btn btn-warning">
        <i class="fas fa-money-bill"></i> Novo Lan√ßamento
      </a>
      <a href="/relatorios/listar" class="btn btn-info">
        <i class="fas fa-chart-line"></i> Relat√≥rios
      </a>
    </div>
  </div>

  <!-- üîß Gerenciamento Administrativo -->
  <div class="admin-actions">
    <h3>Gerenciamento Administrativo</h3>
    <div class="btn-group">
      <a href="/usuarios" class="btn-azul">
        <i class="fas fa-users"></i> Gerenciar Usu√°rios
      </a>

      <a href="/caixas" class="btn-azul">
        <i class="fas fa-cash-register"></i> Gerenciar Caixas
      </a>

      <a href="/caixas/resumo" class="btn btn-azul">
        <i class="fas fa-chart-bar"></i> Resumo de Caixas
      </a>

      <a href="/logout" class="btn-vermelho">
        <i class="fas fa-sign-out-alt"></i> Sair
      </a>
    </div>
  </div>
</div>

<script>
// üìä Dashboard JavaScript
document.addEventListener('DOMContentLoaded', function() {
  loadDashboardData();
  loadCharts();
  loadAlerts();
  
  // Atualizar dados a cada 30 segundos
  setInterval(loadDashboardData, 30000);
});

async function loadDashboardData() {
  try {
    const response = await fetch('/api/dashboard/stats');
    const data = await response.json();
    
    // Atualizar cards
    document.getElementById('total-os').textContent = data.totalOS || '0';
    document.getElementById('os-abertas').textContent = `${data.osAbertas || 0} abertas`;
    
    document.getElementById('total-pessoas').textContent = data.totalPessoas || '0';
    document.getElementById('pessoas-ativas').textContent = `${data.pessoasAtivas || 0} ativas`;
    
    document.getElementById('total-produtos').textContent = data.totalProdutos || '0';
    document.getElementById('produtos-baixo').textContent = `${data.produtosBaixoEstoque || 0} com estoque baixo`;
    
    document.getElementById('faturamento-mes').textContent = data.faturamentoMes || 'R$ 0,00';
    document.getElementById('crescimento').textContent = `${data.crescimento || 0}% vs m√™s anterior`;
    
  } catch (error) {
    console.error('Erro ao carregar dados do dashboard:', error);
  }
}

async function loadCharts() {
  try {
    // Carregar dados dos gr√°ficos
    const [osStatusData, faturamentoData, produtosData] = await Promise.all([
      fetch('/api/dashboard/os-status').then(r => r.json()),
      fetch('/api/reports/financial?months=6').then(r => r.json()),
      fetch('/api/reports/products').then(r => r.json())
    ]);

    // Gr√°fico de OS por Status
    const osStatusCtx = document.getElementById('osStatusChart').getContext('2d');
    new Chart(osStatusCtx, {
      type: 'doughnut',
      data: {
        labels: osStatusData.labels || ['Abertas', 'Em Andamento', 'Finalizadas', 'Canceladas'],
        datasets: [{
          data: osStatusData.data || [0, 0, 0, 0],
          backgroundColor: ['#ffc107', '#17a2b8', '#28a745', '#dc3545']
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false
      }
    });

    // Gr√°fico de Faturamento
    const faturamentoCtx = document.getElementById('faturamentoChart').getContext('2d');
    new Chart(faturamentoCtx, {
      type: 'line',
      data: {
        labels: faturamentoData.labels || ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun'],
        datasets: [{
          label: 'Faturamento',
          data: faturamentoData.data || [0, 0, 0, 0, 0, 0],
          borderColor: '#007bff',
          backgroundColor: 'rgba(0, 123, 255, 0.1)',
          tension: 0.4
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              callback: function(value) {
                return 'R$ ' + value.toLocaleString();
              }
            }
          }
        }
      }
    });

    // Gr√°fico de Produtos
    const produtosCtx = document.getElementById('produtosChart').getContext('2d');
    new Chart(produtosCtx, {
      type: 'bar',
      data: {
        labels: produtosData.labels || ['Sem dados'],
        datasets: [{
          label: 'Vendas',
          data: produtosData.data || [0],
          backgroundColor: '#28a745'
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });

    // Gr√°fico de T√©cnicos (dados est√°ticos por enquanto)
    const tecnicosCtx = document.getElementById('tecnicosChart').getContext('2d');
    new Chart(tecnicosCtx, {
      type: 'radar',
      data: {
        labels: ['OS Conclu√≠das', 'Tempo M√©dio', 'Satisfa√ß√£o', 'Produtividade'],
        datasets: [{
          label: 'T√©cnico A',
          data: [85, 90, 88, 92],
          borderColor: '#007bff',
          backgroundColor: 'rgba(0, 123, 255, 0.2)'
        }, {
          label: 'T√©cnico B',
          data: [78, 85, 82, 88],
          borderColor: '#28a745',
          backgroundColor: 'rgba(40, 167, 69, 0.2)'
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false
      }
    });

  } catch (error) {
    console.error('Erro ao carregar gr√°ficos:', error);
    // Fallback para gr√°ficos com dados zerados
    loadChartsFallback();
  }
}

function loadChartsFallback() {
  // Gr√°ficos com dados zerados em caso de erro
  const charts = [
    { id: 'osStatusChart', type: 'doughnut', data: [0, 0, 0, 0], labels: ['Sem dados', 'Sem dados', 'Sem dados', 'Sem dados'] },
    { id: 'faturamentoChart', type: 'line', data: [0, 0, 0, 0, 0, 0], labels: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun'] },
    { id: 'produtosChart', type: 'bar', data: [0], labels: ['Sem dados'] },
    { id: 'tecnicosChart', type: 'radar', data: [0, 0, 0, 0], labels: ['Sem dados', 'Sem dados', 'Sem dados', 'Sem dados'] }
  ];

  charts.forEach(chart => {
    const ctx = document.getElementById(chart.id).getContext('2d');
    new Chart(ctx, {
      type: chart.type,
      data: {
        labels: chart.labels,
        datasets: [{
          label: 'Sem dados',
          data: chart.data,
          backgroundColor: chart.type === 'doughnut' ? ['#e9ecef', '#e9ecef', '#e9ecef', '#e9ecef'] : '#e9ecef'
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false
      }
    });
  });
}

async function loadAlerts() {
  try {
    const response = await fetch('/api/dashboard/alerts');
    const alerts = await response.json();
    
    const container = document.getElementById('alerts-container');
    container.innerHTML = '';
    
    alerts.forEach(alert => {
      const alertDiv = document.createElement('div');
      alertDiv.className = `alert alert-${alert.type}`;
      alertDiv.innerHTML = `
        <i class="fas fa-${alert.icon}"></i>
        <strong>${alert.title}</strong>
        <p>${alert.message}</p>
        <small>${alert.time}</small>
      `;
      container.appendChild(alertDiv);
    });
    
  } catch (error) {
    console.error('Erro ao carregar alertas:', error);
  }
}
</script>